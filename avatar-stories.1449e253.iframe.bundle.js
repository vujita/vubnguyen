"use strict";(self.webpackChunkvujita_ui=self.webpackChunkvujita_ui||[]).push([[492],{"./src/avatar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PlaceholderAvatar:()=>PlaceholderAvatar,ProfileAvatar:()=>ProfileAvatar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>avatar_stories});var react=__webpack_require__("../../node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/class-variance-authority/dist/index.mjs"),clsx=__webpack_require__("../../node_modules/clsx/dist/clsx.mjs"),tw_merge=__webpack_require__("../../node_modules/tailwind-merge/dist/lib/tw-merge.mjs");let classnames=function(){for(var _len=arguments.length,inputs=Array(_len),_key=0;_key<_len;_key++)inputs[_key]=arguments[_key];return(0,tw_merge.m)((0,clsx.W)(inputs))};function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var placeHolderVariants=(0,dist.j)("overflow-clip text-center select-none",{variants:{size:{lg:["text-lg"],md:["text-sm"],sm:["text-sm"],xlg:["text-lg"],xs:["text-xs"]}}}),avatarVariants=(0,dist.j)("relative flex items-center justify-center overflow-hidden border-width-2",{defaultVariants:{backgroundColor:"gray",border:!1,shape:"rounded",size:"sm"},variants:{backgroundColor:{gray:"bg-gray-300 dark:bg-gray-600"},border:{false:[],true:[]},shape:{rounded:"rounded-full",square:""},size:{lg:["h-24 w-24"],md:["h-16 w-16"],sm:["h-12 w-12"],xlg:["h-32 w-32"],xs:["h-8 w-8"]}}}),Avatar=(0,react.forwardRef)(function(props,ref){var _props_border=props.border,backgroundColor=props.backgroundColor,imgClassName=props.imgClassName,imgProps=props.imgProps,size=props.size,shape=props.shape,src=props.src,placeholder=props.placeholder,divProps=_object_without_properties(props,["border","backgroundColor","imgClassName","imgProps","size","shape","src","placeholder"]),divClassNames=avatarVariants({backgroundColor:backgroundColor,border:void 0!==_props_border&&_props_border,shape:shape,size:size}),_useState=_sliced_to_array((0,react.useState)(!src),2),showPlaceholder=_useState[0],setShowPlaceholder=_useState[1];return(0,react.useEffect)(function(){setShowPlaceholder(!src)},[src]),react.createElement("div",_object_spread_props(_object_spread({},divProps),{className:divClassNames,ref:ref}),src?react.createElement("img",_object_spread_props(_object_spread({"aria-label":"Avatar photo"},imgProps),{className:classnames(["h-full w-full object-cover"],imgClassName),onError:function(){setShowPlaceholder(!0)},onLoad:function(){setShowPlaceholder(!1)},src:src})):null,showPlaceholder?react.createElement("div",{className:placeHolderVariants({size:size})},placeholder):null)});Avatar.displayName="Avatar";try{avatarVariants.displayName="Avatar",avatarVariants.__docgenInfo={description:"",displayName:"Avatar",props:{backgroundColor:{defaultValue:null,description:"",name:"backgroundColor",required:!1,type:{name:'"gray" | null'}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"boolean | null"}},shape:{defaultValue:null,description:"",name:"shape",required:!1,type:{name:'"rounded" | "square" | null'}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:'"sm" | "lg" | "md" | "xlg" | "xs" | null'}},class:{defaultValue:null,description:"",name:"class",required:!1,type:{name:"ClassValue"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"ClassValue"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/avatar.tsx#Avatar"]={docgenInfo:Avatar.__docgenInfo,name:"Avatar",path:"src/avatar.tsx#Avatar"})}catch(__react_docgen_typescript_loader_error){}let avatar_stories={argTypes:{backgroundColor:{control:"radio",defaultValue:"gray",description:"background color",options:["gray"]},border:{control:"boolean",defaultValue:!1,description:"border"},className:{control:"text",defaultValue:"",description:"extra classnames"},imgClassName:{control:"text",defaultValue:"",description:"extra classnames"},placeholder:{control:"text",defaultValue:"N/A",description:"placeholder when image is missing"},shape:{control:"radio",defaultValue:"rounded",options:["rounded","square"]},size:{control:"radio",defaultValue:"xs",options:["xs","sm","md","lg"]},src:{control:"text"}},component:Avatar,parameters:{layout:"centered"},tags:["autodocs"],title:"Example/Avatar"};var PlaceholderAvatar={args:{backgroundColor:"gray",border:!1,placeholder:"N/A",shape:"rounded",size:"xs"}},ProfileAvatar={args:{backgroundColor:"gray",border:!1,placeholder:"N/A",shape:"rounded",size:"sm",src:"https://cdn.discordapp.com/avatars/318810734685454336/2d4cae233d57ba9ab0e3deec9c2600d6.png"}};PlaceholderAvatar.parameters={...PlaceholderAvatar.parameters,docs:{...PlaceholderAvatar.parameters?.docs,source:{originalSource:'{\n  args: {\n    backgroundColor: "gray",\n    border: false,\n    placeholder: "N/A",\n    shape: "rounded",\n    size: "xs"\n  }\n}',...PlaceholderAvatar.parameters?.docs?.source}}},ProfileAvatar.parameters={...ProfileAvatar.parameters,docs:{...ProfileAvatar.parameters?.docs,source:{originalSource:'{\n  args: {\n    backgroundColor: "gray",\n    border: false,\n    placeholder: "N/A",\n    shape: "rounded",\n    size: "sm",\n    src: "https://cdn.discordapp.com/avatars/318810734685454336/2d4cae233d57ba9ab0e3deec9c2600d6.png"\n  }\n}',...ProfileAvatar.parameters?.docs?.source}}};let __namedExportsOrder=["PlaceholderAvatar","ProfileAvatar"]}}]);